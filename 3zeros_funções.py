# -*- coding: utf-8 -*-
"""3Zeros_funções.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ranlKav1RCOsbKZIXetlm_ZNGzR-qL2c
"""

import numpy as np
import matplotlib.pyplot as plt

def poly(x,a=1,b=-2, c=-3):
  return a*x**2 + b*x + c

def dpoly(x,a=1,b=-2):
  return 2*a*x + b

x = np.linspace(-2,4,101)

y = poly(x)

plt.plot(x,y)
plt.grid()
plt.show()

def bisect(func,a,b,eps=1e-3):
  intervalo_serve = func(a)*func(b)
  if (intervalo_serve) <= 0:
    delta = 100.0
    while(delta > eps):
      x_med = (a+b)/2
      if func(x_med)*func(a) <=0:
        b = x_med
      else:
        a = x_med
      delta = abs(a-b)
      print(delta)
  return a,b

intervalo = bisect(poly, a=-2, b=4, eps=1e-3)



print(intervalo)

intervalo = bisect(poly, a=1, b=4, eps=1e-3)

print(intervalo)

def newton(func, dfunc, x_0, eps):
  delta = 1e3
  x_i = x_0
  while(delta >= eps):
    x = x_i - func(x_i)/dfunc(x_i)
    delta = abs(x - x_i)
    print(delta)
    x_i = x
  return x_i

raiz = newton(poly, dpoly, x_0=-2, eps=1e-3)

print(raiz)

raiz = newton(poly, dpoly, x_0=4, eps=1e-3)

print(raiz)

def poly(x,a=1,b=-2, c=-3, d=3):
  return a*x**3 + b*x**2 + c*x

def dpoly(x,a=1,b=-2,c=-3):
  return 3*a*x**2 + 2*b*x + c

plt.plot(x,poly(x))
plt.xlim([-1.5,-0.5])
plt.grid()

