# -*- coding: utf-8 -*-
"""Exercicio 1 derivadas 1 e 2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rQHYnFSR3-rhb6T8YG4MLTV1y6P4NNqN
"""

import numpy as np

# Função para calcular a derivada central e direita
def derivada(func, x, h):
    central = (func(x + h) - func(x - h)) / (2 * h)
    direita = (func(x + h) - func(x)) / h
    return central, direita

# Função para calcular o erro relativo
def erros(x, y):
    err = np.abs((x - y) / y)
    return err

# Função polinomial
def polinomio(x):
    return x**2 + 2*x + 9

# Escolha um valor para h (por exemplo, 0.001)
h = 0.001

# Ponto no qual você deseja calcular a derivada
x = 2

# Calcula as estimativas da derivada central e direita
central, direita = derivada(polinomio, x, h)

# Valor verdadeiro da derivada no ponto x
valor_verdadeiro = 4 * x + 2

# Calcula o erro relativo para a derivada central e direita
erro_central = erros(central, valor_verdadeiro)
erro_direita = erros(direita, valor_verdadeiro)

# Imprime os resultados
print("Derivada Central:", central)
print("Erro Relativo (Central):", erro_central)
print("Derivada Direita:", direita)
print("Erro Relativo (Direita):", erro_direita)

import numpy as np
def derseg(func,x,h):
    segunda = (func(x-h)-2*func(x)+func(x+h))/h**2
    return segunda
def erros(x,y):
    err = np.abs((x-y)/y)
    return err
def poli(x):
    return x**3+2*x**2+9
h=0.001
x=2

segunda = derseg(poli,x,h)
valor_verdadeiro = 6*x+4

erro_segunda = erros(segunda,valor_verdadeiro)

print(segunda)
print(erro_segunda)